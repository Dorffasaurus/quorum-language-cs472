use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Columns.TextColumn
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Interface.Controls.Charts.BarChart
use Libraries.Interface.Controls.Charts.PieChart
use Libraries.Containers.HashTable
use Libraries.Containers.Iterator

//  class ModelGraphs contains functions to build graphs from passed in hashtables

class ModelGraphs
/*
    Function WordsChart expects the hashtable from WordFrequency class.
    
    Returns a bar chart that displays the all words found in file and the amount
    of occurrences each word has within file.
*/
    action WordsChart(HashTable<text, integer> WordFreq, text title, text xAxisLabel, text yAxisLabel) returns BarChart
        DataFrame frame
        TextColumn textCol
        NumberColumn numCol
        
        textCol:SetHeader("word")
        numCol:SetHeader("occurrences")
        
        //  iterate over hashmap with word frequencies
        Iterator<text> FreqItr = WordFreq:GetKeyIterator()

        repeat while FreqItr:HasNext()
            text word = FreqItr:Next()
            number value = WordFreq:GetValue(word)
            textCol:Add(word)
            numCol:Add(value)
        end

        //  populate dataframe 
        frame:AddColumn(textCol)
        frame:AddColumn(numCol)  
        
        frame:AddSelectedFactors("word")
        frame:AddSelectedColumns("occurrences")

        BarChart chart = frame:BarChart()
    
        chart:SetXAxisTitle(xAxisLabel)
        chart:SetYAxisTitle(yAxisLabel)
        chart:SetTitle(title)
        chart:ShowLegend(false)

        return chart
    end
    
/*
    Function PercentageChart expects a nested hashtable w/ words and their probabilities
    w/in a hashtable that contains likelihoods of each class.

    Returns a bar chart that displays all instances and probabilites in nested hashtable 
    and divides them into groups based on their class.
*/
    action PercentageChart(HashTable<text, HashTable<text, number>> likelihoods, 
                                    HashTable<text, integer> WordFreq, text title) returns PieChart
        DataFrame frame
        TextColumn classes
        NumberColumn words

        //   hashtable to store number of word occurrences 
        HashTable<text, number> amount

        //  set header for dataframe variables
        classes:SetHeader("classes")
        words:SetHeader("words")

        //  iterate over outer hashtable for class data
        Iterator<text> outerItr = likelihoods:GetKeyIterator()
        repeat while outerItr:HasNext()
            text className = outerItr:Next()
            
            classes:Add(className)       //  adds class names to dataframe
            amount:Add(className, 0)     //  adds class names to hashtable

            //  iterate over inner hashtable for word frequencies
            Iterator<text> innerItr = WordFreq:GetKeyIterator()
            repeat while innerItr:HasNext()
                text word = innerItr:Next()
        
                if likelihoods:GetValue(className):HasKey(word)
                    number count = amount:GetValue(className)
                    count = count + 1
                    amount:Add(className, count)
                end
            end
        end
        
        //  iterate over hashtable of frequency values
        Iterator<text> itr = amount:GetKeyIterator()
        repeat while itr:HasNext()
            text word = itr:Next()
            number val = amount:GetValue(word)

            //  add amount of words found to dataframe 
            words:Add(val)          
        end

        //  populate dataframe
        frame:AddColumn(classes)
        frame:AddColumn(words)

        frame:AddSelectedFactors("classes")
        frame:AddSelectedColumns("words")

        PieChart chart = frame:PieChart()

        chart:SetColorPaletteToColorgorical()
        chart:SetFontSize(60)

        chart:SetTitle(title)
            
        return chart
    end
end