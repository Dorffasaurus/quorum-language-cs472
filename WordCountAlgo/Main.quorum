
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Compute.Math
use Libraries.Containers.HashTable
use Libraries.Containers.Support.HashTableIterator
use Libraries.Containers.Support.HashTableKeyIterator
use Libraries.System.FileWriter

class Main
    action Main
        // create WordFrequency object
        WordFrequency wordcount
        // create HashTable to store the contents
        HashTable<text, integer> results
        HashTable<text, integer> sortedResults
        // specify filename
        text filename = "clean_wizard_of_oz.txt"

//        wordcount:RemoveStopWords()

        results = wordcount:Calculate_from_file(filename)
        // store all hashtable keys to array
        Array<text> keys = results:CopyToKeyArray()

        // sort contents into new hashtable, then print
        sortedResults = SortFreq(results, keys)
        PrintSortedWords(sortedResults, keys)
        
//        wordcount:PrintFrequencies()

    end

    // TODO: Find a way to get this to work in class WordFrequency
    //      NOTE: ONLY workk when Array<text> words passed in as parameter
    action SortFreq(HashTable<text, integer> table, Array<text> words) returns HashTable<text, integer>

        // sort words (words) based on value (frequncies)
        integer i = 0
        repeat while i < words:GetSize() - 1
            integer j = 0
            repeat while j < words:GetSize() - i - 1
                if table:GetValue(words:Get(j)) < table:GetValue(words:Get(j + 1))
                    // Swap words[j] and words[j + 1]
                    text temp = words:Get(j)
                    words:Set(j, words:Get(j + 1))
                    words:Set(j + 1, temp)
                end
                j = j + 1
            end
            i = i + 1
        end

        // store sorted results to a hashtable
        HashTable<text, integer> sortedTable
        i = 0
        repeat while i < words:GetSize()
            sortedTable:Add(words:Get(i), table:GetValue(words:Get(i)))
            i = i + 1
        end
        return sortedTable
    end

    action PrintSortedWords(HashTable<text, integer> table, Array<text> words)
        // output sorted contents
        integer i = 0
        repeat while i < words:GetSize()
            output words:Get(i) + ": " + table:GetValue(words:Get(i))
            i = i + 1
        end
    end    

end


